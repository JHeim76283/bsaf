
#these properties will not be overriden, and should be inherited by all child ResourceMaps of the parent
AbstractApplication=AbstractApplication

#properties to test overriding by chained ResourceMaps
Application.title=AbstractApplication.properties title
Application.field1=AbstractApplication.properties field1
Application.field2=AbstractApplication.properties field2


#conversion testing
AbstractApplication.boolean=true
AbstractApplication.character=h
AbstractApplication.color1=10,20,30,40
AbstractApplication.color2=50,60,70
AbstractApplication.color3=#FFAACD
AbstractApplication.color4=#AABBCCDD
AbstractApplication.dimension = -144, 2356
AbstractApplication.double = 3.141592653589793
AbstractApplication.emptyBorder = 5, 6, 7, 8
AbstractApplication.float = 3.1415927
AbstractApplication.font = Arial-PLAIN-12
AbstractApplication.insets = 9,8,7,6
AbstractApplication.integer = 56789234
AbstractApplication.keystroke = alt shift F4
AbstractApplication.long = 9223372036854775807
AbstractApplication.point = 55,66
AbstractApplication.point2d_double = 55.14156, 66.14156
AbstractApplication.point2d_float = 77.14156, 88.14156
AbstractApplication.rectangle = 55,66,100,200
AbstractApplication.rectangle2d_double = 12.345678, 23.45678, 567.123456, 789.23456
AbstractApplication.rectangle2d_float = 55.123, 66.321, 100.765, 200.876
AbstractApplication.short = 876
AbstractApplication.uri = http://java.sun.com
AbstractApplication.url = http://java.sun.com
AbstractApplication.string = tootie frooty, oh rooty!
#following key intentionally has no value
AbstractApplication.novalue

#this is in the recources directory
AbstractApplication.image1 = duke.png
#images is sub-foder within resources
AbstractApplication.image2 = images/duke.gif
AbstractApplication.image3 = images/smallbabies.jpeg
#the first 3 images were referenced relative to the directory in which this properties file is located. image4 is referenced from
#the root of the classpath, indicated by starting with a slash character
AbstractApplication.image4 = /org/jdesktop/application/resource/abstractapp/resources/images/javalogo52x88.gif

#properties for testing getting as arrays
AbstractApplication.array.string = one, two,three
AbstractApplication.array.string.one = one
AbstractApplication.array.string.lastComma = one, two, three,
AbstractApplication.array.string.missing = one, , three,
AbstractApplication.array.string.empty=

AbstractApplication.array.int = 1,2,3,
AbstractApplication.array.int.empty=
AbstractApplication.array.int.missing = 1, ,3

AbstractApplication.array.long = 1,2,3,
AbstractApplication.array.long.empty=
AbstractApplication.array.long.missing = 1, ,3

AbstractApplication.array.double = 1.1, -2.22, 3.333
AbstractApplication.array.double.missing = 1.1, , 3.333
AbstractApplication.array.double.empty

AbstractApplication.array.boolean = true, false, true, false,
AbstractApplication.array.boolean.one = true,
AbstractApplication.array.boolean.missing = true, true,,true
AbstractApplication.array.boolean.empty

#non primitive and String types can be converted as object arrays; elements are delimeted by semi-colon
AbstractApplication.array.point = 22,33; 66,77 ; 99, 78
AbstractApplication.array.point.empty
AbstractApplication.array.point.missing = 22,33; ; 99, 78
AbstractApplication.array.point.badPoint = 22, ; 99, 78
AbstractApplication.array.point.badPoint2 = 22,33a; ; 99, 78

AbstractApplication.array.rect = 1,2,3,4 ; 5,6,7,8; 9,10,11,12
AbstractApplication.array.rect.empty
AbstractApplication.array.rect.missing= 1,2,3,4 ; 5,6,7,8; ;9,10,11,12
AbstractApplication.array.rect.badRect = 22, ; 99, 78
AbstractApplication.array.rect.badRect2= 1,2,3,4 ; 5,6,7,8; 9,10,11
